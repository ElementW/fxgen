TODO
-------------

.Main ID
	.Split OperatorNode and OperatorFx
		.CallDesc is a bad concept => changed to operatorFx class (derived from NObject) that contain parameters
		.Move compiler code to Editor (need to remove intermediate format, just take NOpProject and NOperatorNode)
		.OperatorNode now contain intermediate computed texture (make a resource pooling)
		.OperatorNode contain an operatorFx

	.create a little fxgen operator project lib (later)
	.C#
		.create a NengineOp wrapper for fxgenLib Engine
	.XNA 4.0 (see later)
		.create a 100% C# engine (used of multi threading on PC and XBox)

.FxGenLib
	.Rewrite animation processing (later)
	.Derive NResource from NObject
	
.Editor:GUI
	X Review Properties control.
		X Add variables limits into properties items
		X Add slider control
	.TreeNodeCtrl
		.Add node renaming
	X Button
		X add style: menu and color
	.Viewport
		.manage resource display
	.add a thread for working process (operatorfx computing, compilation)
	.add asserts manager
		.add an asserts directory (an assert is just an fxgen designer project)
		.load asserts list from directory then add them to treeview
		.compile and compute asserts node graph (later add cache)
	.add undo-redo

Version 0.7 alpha (Release: New FxGen Engine !)
----------------------------------
.Main
	.Separation between designer and engine code.
	.Can now create operators library.
.FxGenLib
	.Entirely rewrite of operator engine
		.Code lighter.
		.Removed designer related code
		.At end add support Multi-Core (future support for OpenML or OpenCL)	
	.Added an operators compiler process (always split between designer and engine)
		.Take an operators graph in input then generate a linear operators calls for engine.
	.Added memory manager (detect memory leaks in debug)
.GUILib
	.Fixed Menu destruction crash
	.Application Management Removed
	.Win32 dependencies removed
.Editor
	.Use of SFML for main window creation for Windows,Linux and Mac (http://www.sfml-dev.org)

Version 0.6 alpha (Release: CrossPlatForm GUI !)
----------------------------------

.Editor
	.Rewrited for new GUI.
	.Operators global view display (if any operators out of screen).

.FxGenLib
	.Runtime class creation by modules added (futures plugins .dll, .so ..)
	.Modified FxGen Serialization
		.Classes saved by name and not by GUID as before
		.Support for older fxgen format added.
		.Errors reporting.
	.Added Stacked Errors tracer
	
.GUI	
	.New GUILib now oriented Cross-platform
	.Custum GUI renderer using OpenGL.
	.Aplpha blending supported for GUI rendering.
	.New Strip Bar control.
	.New Text, Button and Edit controls.
	.Now NApplication And NFileDialog are base classes.
	.Win32 specific Classes
		.NW32Aplication::NApplication
		.NW32FileDialog::FileDialog 
	.New ColorPicker Control.
	.Keyboard mapping.

	
Version 0.5 alpha (Release: Use FxGen in your Games !)
----------------------------------
.Custom popup menu (OpenGL GUI preparation)
.NEngineOp::_ComputeInvaliddOps() optimisation (reftarget invalidation computed once)
.new method NEngineOp::_ComputeToProcessOpsCount()
.new method NObjectGarbage::Compact()
.new method NObjectGarbage::RemoveEntry()
.GCC compilation support.
.Fixed Crash when Referenced variable<->object are broken
.Engine resources detail factor (x0.5, x1.0, x2.0)
	.i.e For textures, process them for size * detail factor
.New main submenu items "options"

.NUbyteComboProp menu focus fix
New NTreeNode::GetSonFromName()
	
.API
	NEngineOp* NEngineOp::GetEngine();
	.NEngineOp::Clear()
	.NEngineOp::LoadProject()
	.NEngineOp::CompactMemory()
	.NEngineOp::GetFinalsResultsList()
	.NEngineOp::ProcessFinalResult()

New Operators
	.NVectorOp	

.FxgenLib
	.Removed MS windows dependencies (use of C standart functions)


Version 0.4 alpha
----------------------------------

Fixed
.'A' button bug on properties control

Main Changed
.Any textures sizes management
.Operators parameters version management
.Compilation changed from Static Library to Dynamic (DLL)
.NArchive now support Memory and File Stream
.Added a color picker
.Added TGA Writer at viewport context menu
.Added Bilinear filtering On/Off at viewport context menu

New Operators
	.NLerpOp	
	.NThresholdOp
	.NAlphaOp
	.NNoiseOp
	
Changed Operators
	.AddOp support different texture size
		.Addop's bitmap had the first input operator's bitmap size.
		.Other inputs have their size cropped.
		.Alpha mode now blend alpha sources values only
		.Now More than 2 inputs can be managed  (source texture, normals, specular, ambiant)

	.FlatOp, CellOp, CloudOp and GradientOp
		.Added Width and Height
		
	.RotoZoomOp
		.All parameters changed
			.ubyte to float
			.texture resize
			.x and y zoom factors separated
		.Can change texture size now
		
	.NColorOp
		.Box and Gaussian Filters Types

	.NLightOp
		Now support input Specular operators too
		
	.NGlowOp, NRect
		.All parameters changed
			.ubyte to float
	
	
Removed Operator
	.NSetSize (now see RotoZoomOp)


Version 0.3 alpha
----------------------------------
.Double click to show an operator result.
.Added operators collision detection when user move or add them (to avoid operators orverlap).
.First page selection when a project is opened or created.
.Fixed crash when deleting a group.
.Fixed application freeze with a complex operators stacking schema (Thanks to: Cristea Cristian)
.Animation controller now saved.

.New operators
	."Cell"			(Code: Anders Stenberg).
	."Invert"		(Code: Anders Stenberg).


Version 0.2 alpha
----------------------------------
.Crash correction while deleting a linked operator.
.Operators context menu displayed by categories.
.Fixed properties enumeration name (comma removed).
.Added invalidating reference maker operators if target invalidated.
.Displaying error message 'Invalid links' at viewport.


Version 0.1 alpha
-----------------
Initial version.
